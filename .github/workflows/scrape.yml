name: Scrape Rightmove

on:
  schedule:
    - cron: "0 */6 * * *"
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout current repo
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Run scraper
      run: |
        python scraper.py
        if [ ! -s results.json ]; then
          echo "No new results. Skipping email and upload."
          exit 0
        fi

    - name: Append results to archive.json with timestamp
      run: |
        timestamp=$(date -u +"%Y-%m-%d %H:%M UTC")
        jq -n --arg time "$timestamp" --slurpfile new results.json \
          '{ ($time): $new[0] }' > temp.json

        if [ -f archive.json ]; then
          jq -s '.[0] * .[1]' archive.json temp.json > combined.json
        else
          mv temp.json combined.json
        fi

        mv combined.json archive.json

    - name: Send email with HTML formatting
      env:
        EMAIL_USER: 1337.david.smith.1337
        EMAIL_PASS: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_TO: dragoneternaluk@gmail.com
      run: |
        python - <<EOF
        import smtplib, json
        from email.mime.multipart import MIMEMultipart
        from email.mime.text import MIMEText

        with open('results.json', encoding='utf-8') as f:
            data = json.load(f)

        count = len(data)
        plain_lines = [f"Found {count} new properties:\n"]
        html_lines = [f"<h2>Found {count} new properties:</h2><ul>"]

        for pid, prop in data.items():
            address = prop.get("address", "")
            price = prop.get("price", "")
            ptype = prop.get("type", "")
            beds = prop.get("beds", "")
            baths = prop.get("baths", "")
            images = prop.get("images", "")
            desc = prop.get("description", "")

            plain_lines += [f"Address: {address}", f"Price: {price}", f"Type: {ptype}",
                            f"Beds: {beds}", f"Baths: {baths}", f"Images: {images}",
                            f"Description: {desc}", "-"*30]

            html_lines.append(f"""
            <li>
              <strong>Address:</strong> {address}<br>
              <strong>Price:</strong> {price}<br>
              <strong>Type:</strong> {ptype}<br>
              <strong>Beds:</strong> {beds} | <strong>Baths:</strong> {baths} | <strong>Images:</strong> {images}<br>
              <strong>Description:</strong> {desc}
              <hr>
            </li>""")

        html_lines.append("</ul>")

        msg = MIMEMultipart("alternative")
        msg["Subject"] = "Rightmove Results - GitHub Actions"
        msg["From"] = "${EMAIL_USER}"
        msg["To"] = "${EMAIL_TO}"

        part1 = MIMEText("\n".join(plain_lines), "plain", "utf-8")
        part2 = MIMEText("".join(html_lines), "html", "utf-8")

        msg.attach(part1)
        msg.attach(part2)

        with smtplib.SMTP_SSL("smtp.gmail.com", 465) as server:
            server.login("${EMAIL_USER}", "${EMAIL_PASS}")
            server.sendmail("${EMAIL_USER}", "${EMAIL_TO}", msg.as_string())
        EOF

    - name: Commit updated files to this repo
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add seen.json results.json archive.json || true
        git diff --cached --quiet || (git commit -m "Update seen, results, and archive" && git push)

    - name: Push archive.json to viewer repo (for GitHub Pages)
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git clone https://x-access-token:${GH_TOKEN}@github.com/Garry117S/rightmove-viewer.git viewer-repo
        cp archive.json viewer-repo/docs/archive.json
        cd viewer-repo
        git add docs/archive.json
        git diff --cached --quiet || git commit -m "Update archive.json from scraper"
        git push
